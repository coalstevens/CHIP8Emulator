#ifndef CHIP8_H
#define CHIP8_H

#define DISPLAY_WIDTH 64
#define DISPLAY_HEIGHT 32

typedef struct ChipContext {
    u_int8_t memory[4 * 1024]; // 4096 bytes of memory
    u_int8_t V[16]; // 16 8-bit registers
    u_int8_t stack[16]; // 16 byte stack

    u_int8_t I;
    u_int8_t PC; // Program Counter
    u_int8_t SP; // Stack Pointer
    u_int8_t delayTimer; // Delay timer
    u_int8_t soundTimer; // Sound register
    u_int8_t frameBuffer[DISPLAY_HEIGHT][DISPLAY_WIDTH];
    u_int16_t keyState;
    // mapping 16 keys to bits of keyMap
    // 1 2 3 4
    // q w e r
    // a s d f
    // z x c v
} ChipContext;

void initializeChip(ChipContext* chip);
void executeCPUCycle(ChipContext* chip);
int handleKeyPress(SDL_KeyCode keyCode, ChipContext* chip);

u_int8_t fontSet[80] = {
    0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
    0x20, 0x60, 0x20, 0x20, 0x70, // 1
    0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
    0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
    0x90, 0x90, 0xF0, 0x10, 0x10, // 4
    0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
    0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
    0xF0, 0x10, 0x20, 0x40, 0x40, // 7
    0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
    0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
    0xF0, 0x90, 0xF0, 0x90, 0x90, // A
    0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
    0xF0, 0x80, 0x80, 0x80, 0xF0, // C
    0xE0, 0x90, 0x90, 0x90, 0xE0, // D
    0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
    0xF0, 0x80, 0xF0, 0x80, 0x80  // F
};

#endif // CHIP8